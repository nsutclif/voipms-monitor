AWSTemplateFormatVersion : "2010-09-09"
Description: Resources to support testing of stacks


# TODO: connect outputs of test(s) to parameter of Test Report custom resource.
# Write results to S3 bucket
# Then connect outputs of test report to contitional create of github status (pass or fail)
Parameters:
  S3AccessPolicyArn:
    Type: String
    AllowedPattern: arn:aws:iam:.*

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSLambdaExecute
      - Ref: S3AccessPolicyArn
      Policies:
      - PolicyName: NoCreateLogGroups
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          # Don't allow Lambda function to re-create its groups while CloudFormation is
          # deleting the stack
          - Effect: Deny
            Action:
            - logs:CreateLogGroup
            Resource: arn:aws:logs:*:*:*
  CfnTestReportFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: fillinlater
        S3Key: 
          Ref: CodeS3Key
      Handler: built/testReportLambda.handler
      Runtime: nodejs6.10
      Role:
        Fn::GetAtt: [LambdaExecutionRole, Arn]
  # Create a log group for the Lambda function so that it gets deleted when the stack is deleted.
  CfnTestReportFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${CfnTestReportFunction}
#   CfnTestSuiteFunction:
#     Type: AWS::Lambda::Function
#     Properties:
#       Code:
#         S3Bucket: fillinlater
#         S3Key: 
#           Ref: CodeS3Key
#       Handler:
#         Ref: LambdaHandler
#       Runtime: nodejs6.10
#       Role:
#         Fn::GetAtt: [LambdaExecutionRole, Arn]
#   # Create a log group for the Lambda function so that it gets deleted when the stack is deleted.
#   CfnTestSuiteFunctionLogGroup:
#     Type: AWS::Logs::LogGroup
#     Properties:
#       LogGroupName:
#         Fn::Sub: /aws/lambda/${CfnTestSuiteFunction}
Outputs:
#   CfnTestSuiteFunctionArn:
#     Value:
#       Fn::GetAtt: [CfnTestSuiteFunction, Arn]
#     Export:
#       Fn::Sub: ${AWS::StackName}-CfnTestSuiteFunctionArn
  CfnTestReportFunctionArn:
    Value:
      Fn::GetAtt: [CfnTestReportFunction, Arn]
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-CfnTestReportFunctionArn