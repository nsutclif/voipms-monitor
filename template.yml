AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: A serverless application for monitoring Voip.ms registration status
Parameters:
  VoipMSUser:
    Type: String
    Default: ""
  VoipMSPassword:
    Type: String
    Default: ""
  VoipMSAccount:
    Type: String
    Default: ""
  NotificationEmail:
    Type: String
  IntervalMinutes:
    Type: Number
    Default: 5
    MinValue: 2 # 1 doesn't work with Schedule expression as is
Conditions:
  CreateSubscription:
    Fn::Not: [Fn::Equals: [Ref: NotificationEmail, '']]
Resources:
  PollVoipMSFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: built/index.handler
      Runtime: nodejs6.10
      CodeUri: ./
      Environment:
        Variables:
          USER:
            Ref: VoipMSUser
          PASSWORD:
            Ref: VoipMSPassword
          ACCOUNT:
            Ref: VoipMSAccount
          # Tell the Lambda function which table to use:
          ACCOUNT_REGISTRATION_STATUS_TABLE_NAME:
            Ref: AccountRegistrationStatus
          REGISTRATION_STATUS_CHANGE_TOPIC:
            Ref: RegistrationStatusChangeTopic
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: "2012-10-17"
          Statement:
            # Allow the Lambda function to use the table:
            - Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:PutItem
              Resource:
                Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AccountRegistrationStatus}
            # Allow the Lambda function to pubish to the SNS topic:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource:
                Ref: RegistrationStatusChangeTopic
      Events:
        PollEvent:
          Properties:
            Schedule:
              Fn::Sub: rate(${IntervalMinutes} minutes)
          Type: Schedule
  AccountRegistrationStatus:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: account
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  RegistrationStatusChangeTopic:
    Type: AWS::SNS::Topic
  NotificationSubscription:
    Type: AWS::SNS::Subscription
    Condition: CreateSubscription
    Properties:
      Protocol: email
      Endpoint:
        Ref: NotificationEmail
      TopicArn:
        Ref: RegistrationStatusChangeTopic